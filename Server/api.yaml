swagger: "2.0"
info:
  title: Indus Net Technologies
  description: this is my company documentation made by you.
  version: 1.0
  contact:
    email: nitish.kumar@indusnet.co.in
  liscence:
    name: Apache 2.0
    url: "http://apache.org"  
  servers:
    -url: "http://localhost:8080/"
    description: This is my local server
    -urls: "http://comany.com/"  
    descriptions: This is my Company server
  tags:
    name: "Users Data"

schemes: [http,https]    

paths:
#Return a String
  /string:
    get:
      summary: Returns a String
      description: It is just returning a fake string.
      responses: 
        200:
          description: Success
          schema:
            type: string
            example: "A fake String"
        400:
          description: User Error
        500:
          description: Internal Server Error

#Return a Object
  /user:
    get:
      summary: This return a single object
      description: Returning a Object
      responses: 
        200:
          description: Success
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
        400:
          description: User Error
        500:
          description: Internal Server Error

#Returning Array of Users
  /allusers:
    get:
      summary: return array of users
      description: Array Return
      responses: 
        200:
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
        400:
          description: User Error
        500:
          description: Internal Server Error

#Returning Array of Users Dynamically by id
  /allusers/{allusersId}:
    get:
      summary: return array of users
      description: Array Return
      parameters:
        - name: allusersId
          in: path
          required: true
          schema:
            type: integer
      responses: 
        200:
          description: Success

#Post json/body
  # /create:
  #   post:
  #     summary: Posting Data
  #     produces:
  #       - application/json
  #     consumes:
  #       - application/json
  #     parameters:
  #     - in: body
  #       name: user
  #       schema:
  #         type: object
  #         properties:
  #           id:
  #             type: integer
  #           name:
  #             type: string
  #     responses: 
  #       200:
  #         description: OK


# Defination 
  /create:
      post:
        summary: Posting Data
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
        - in: body
          name: user
          schema:
            $ref: "#/components/schemas/User"
        responses: 
          200:
            description: OK

#Query
  /usersQuery:
    get:
      parameters:
      - in: query
        name: id
        type: integer
        enum: [1,2,3]
      - in: query
        name: age
        type: integer
      responses:
        200:
          description: OK  

#File Upload
  /upload:
    post:
      consumes:
        -multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: File Upload
        - in: formData
          name: id
          type: integer
          required: true
          description: ID of integer
        - in: header
          name: auth
          schema:
            type: string
        - in: cookie
          name: debug
          schema:
            type: string
      responses:
        200:
          description: OK    

#Get all list
  /users/list:
    get:
      summary: Returns all list of Users
      description: It will return all users data.
      responses: 
          200:
            description: Success
            content:
              application/json:
                type: object
                properties:
                  id: 
                    type: string
          400:
            description: User Error
          500:
            description: Internal Server Error

#Add New User
  /users/add:
    post:
      summary: Add New User
      description: It will add new users data.
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            $ref: "#/components/schemas/sucessResponseObject"
      responses: 
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sucessResponseObject"
        400:
          description: User Error
        500:
          description: Internal Server Error

#User Login
  /users/login:
    post:
      summary: User Login
      description: It will login the User.
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: user login
          schema:
            $ref: "#/components/schemas/loginSuccessResponseObject"
      responses: 
        200:
          description: OK
        400:
          description: User Error
        500:
          description: Internal Server Error

#Update USer Data
  /users/update/{id}:
    put:
      summary: User Update Data
      description: It will update the User.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - in: body
          name: user update
          schema:
            $ref: "#/components/schemas/sucessResponseObject"
      responses: 
        200:
          description: Suceessfully Update
        400:
          description: User Error
        500:
          description: Internal Server Error

#Update USer Data
  /users/delete/{id}:
    delete:
      summary: User Data Delete 
      description: It will delete the User.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses: 
        200:
          description: Suceessfully Delete
        400:
          description: User Error
        500:
          description: Internal Server Error

#Get Single USer Data
  /users/getuser/{id}:
    get:
      summary: Single User Data Get 
      description: It will get single User.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses: 
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sucessResponseObject"
        400:
          description: User Error
        500:
          description: Internal Server Error


components:
    schemas: 
      User:
        type: object
        properties:
          id:
            type: integer
            required: true
          name:
            type: string
      sucessResponseObject:
        type: object
        properties:
          name:
            type: string
            required: true
          email:
            type: string
            required: true
          password:
            type: string
            required: true
          phoneNumber:
            type: integer
            required: true
          isAdmin:
            type: string
          pic:
            type: string
          tokens:
            type: array
      loginSuccessResponseObject:
        type: object
        properties:
          email:
            type: string
            required: true
          password:
            type: string
            required: true
      sucessResponseData:
        title: Success Response
        type: object
        properties:
          status:
           type: integer
          message:
            type: string
          data:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
              phoneNumber:
                type: integer
              isAdmin:
                type: string
              pic:
                type: string
            
