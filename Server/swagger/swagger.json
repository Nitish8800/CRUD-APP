{
  "openapi": "3.0.1",
  "info": {
    "description": "this is my company documentation made by me",
    "version": "1.0.5",
    "title": "Indus Net Technologies",
    "contact": {
      "email": "nitish.kumar@indusnet.co.in"
    }
  },

  "tags": [
    {
      "name": "Users Data",
      "description": "All User Details"
    }
  ],
  "paths": {
    "/string": {
      "get": {
        "tags": ["Users Data"],
        "summary": "Returns a String",
        "description": "It is just returning a fake string.",
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "A Fake String"
                }
              }
            }
          },
          "400": {
            "description": "User Error"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/users/admin/list": {
      "get": {
        "tags": ["Users Data"],
        "summary": "Returns all list of the user by admin",
        "description": "It will return all users data by admin",
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sucessResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "User Error"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/add": {
      "post": {
        "tags": ["Users Data"],
        "summary": "Add New User",
        "description": "It will return all users data",
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "name", "phoneNumber", "password"],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sucessResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "User Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseObject"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users Data"],
        "summary": "Login New User",
        "description": "It will login the users data",
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "password"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sucessResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "User Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseObject"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "tags": ["Users Data"],
        "summary": "Login New User",
        "description": "It will login the users data",
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "password"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sucessResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "User Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseObject"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseObject"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "sucessResponseObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "isAdmin": {
            "type": "string"
          },
          "pic": {
            "type": "string"
          }
        }
      },
      "ErrorResponseObject": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
}
